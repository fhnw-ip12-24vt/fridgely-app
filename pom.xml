<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>ch.primeo</groupId>
	<artifactId>fridgely</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>fridgely</name>
	<description>Fridgely IP12 App</description>
	<url>https://gitlab.fhnw.ch/ip12-24vt/ip12-24vt_fridgely/FridgelyAppV3</url>

	<repositories>
			<repository>
					<id>oss.sonatype.org-snapshot</id>
					<url>https://oss.sonatype.org/content/repositories/snapshots</url>
					<releases>
							<enabled>false</enabled>
					</releases>
					<snapshots>
							<enabled>true</enabled>
					</snapshots>
			</repository>
	</repositories>

	<properties>
		<java.version>21</java.version>
		<querydsl.version>5.1.0</querydsl.version> <!-- Add QueryDSL version property -->
        <hibernate.version>6.6.11.Final</hibernate.version> <!-- Define Hibernate version -->
        <maven-jxr-plugin.version>3.4.0</maven-jxr-plugin.version> <!-- Add JXR plugin version -->
        <maven-project-info-reports-plugin.version>3.9.0</maven-project-info-reports-plugin.version> <!-- Update project info reports plugin version -->

		<jar.name>fridgely-0.0.1-SNAPSHOT</jar.name>
		<launcher.class>ch.primeo.fridgely.Fridgely</launcher.class>

		<pi.hostname>raspberrypi</pi.hostname>
		<pi.ipnumber>10.207.10.169</pi.ipnumber> <!-- Replace with your Raspberry Pi's IP -->
		<pi.port>22</pi.port>
		<pi.username>xxx</pi.username>
		<pi.password>xxx</pi.password>
		<pi.deploydirectory>/home/ip12/deploy</pi.deploydirectory>
		<pi.startScript>start.sh</pi.startScript>
		<pi.restartScript>restart.sh</pi.restartScript>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId> <!-- Add Spring Data JPA starter -->
		</dependency>
        <!-- Add Hibernate Community Dialects -->
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-community-dialects</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
    	<groupId>org.jetbrains</groupId>
    	<artifactId>annotations</artifactId>
    	<version>24.1.0</version> <!-- Or latest available -->
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>5.17.0</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc -->
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>3.49.1.0</version>
		</dependency>

		<!-- QueryDSL dependencies -->
		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-jpa</artifactId>
			<classifier>jakarta</classifier> <!-- Use jakarta classifier for Spring Boot 3+ -->
			<version>${querydsl.version}</version>
		</dependency>
		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-apt</artifactId>
			<version>${querydsl.version}</version>
			<classifier>jakarta</classifier> <!-- Use jakarta classifier -->
			<scope>provided</scope> <!-- Annotation processor, not needed at runtime -->
		</dependency>
		<!-- End QueryDSL dependencies -->

		<!-- Add explicit Jakarta Persistence API for annotation processing -->
		<dependency>
			<groupId>jakarta.persistence</groupId>
			<artifactId>jakarta.persistence-api</artifactId>
			<version>3.1.0</version>
			<scope>compile</scope>
		</dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.3.2</version>
        </dependency>
    </dependencies>

 <reporting>
		<outputDirectory>${project.build.directory}/site</outputDirectory>
		<plugins>
			<!-- Checkstyle site report -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.6.0</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
				<configuration>
					<configLocation>src/main/config/swc_checks.xml</configLocation>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<excludes>**/ch/primeo/fridgely/model/Q*.java</excludes>
				</configuration>
			</plugin>

			<!-- JaCoCo test coverage report -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.13</version>
				<configuration>
					<excludes>
						<!-- Exclude views package from coverage reporting -->
						<exclude>ch/primeo/fridgely/view/**</exclude>
						<!-- Exclude generated QueryDSL Q classes -->
						<exclude>**/Q*.class</exclude>
						<!-- Exclude specific files -->
						<exclude>ch/primeo/fridgely/factory/DefaultFrameFactory.class</exclude>
						<exclude>ch/primeo/fridgely/Fridgely.class</exclude>
					</excludes>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<!-- Surefire test report for mvn site -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>3.5.3</version>
			</plugin>

			<!-- JXR plugin for source cross-reference -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${maven-jxr-plugin.version}</version>
			</plugin>
		</plugins>
	</reporting>

	<build>
		<plugins>
			<!-- Add maven-compiler-plugin for QueryDSL and Lombok annotation processing -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>com.querydsl</groupId>
							<artifactId>querydsl-apt</artifactId>
							<version>${querydsl.version}</version>
							<classifier>jakarta</classifier>
						</path>
						<path>
							<groupId>jakarta.persistence</groupId>
							<artifactId>jakarta.persistence-api</artifactId>
							<version>3.2.0</version>
						</path>
						<!-- Add Lombok annotation processor -->
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>1.18.30</version> <!-- Ensure this matches your Lombok version -->
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.5.3</version>
				<executions>
					<execution>
						<id>default-test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- JaCoCo plugin for code coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.13</version>
				<configuration>
					<excludes>
						<!-- Exclude views package from coverage reporting -->
						<exclude>ch/primeo/fridgely/view/**</exclude>
						<!-- Exclude generated QueryDSL Q classes -->
						<exclude>**/Q*.class</exclude>
						<!-- Exclude specific files -->
						<exclude>ch/primeo/fridgely/factory/DefaultFrameFactory.class</exclude>
						<exclude>ch/primeo/fridgely/Fridgely.class</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Checkstyle plugin for code quality -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.6.0</version>
				<configuration>
					<configLocation>src/main/config/swc_checks.xml</configLocation>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<excludes>**/ch/primeo/fridgely/model/Q*.java</excludes>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>10.23.0</version>
					</dependency>
				</dependencies>
			</plugin>

		    <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.21.0</version> <!-- Make sure this matches your CLI output -->
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven-project-info-reports-plugin.version}</version> <!-- Use updated version -->
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- Replace apt-maven-plugin with maven-processor-plugin -->
			
			<!-- End maven-processor-plugin -->
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>release</id>
			<build>
				<finalName>${jar.name}</finalName>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-dependencies</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/libs
									</outputDirectory>
									<includeScope>runtime</includeScope>
									<excludeTransitive>false</excludeTransitive>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
									<overWriteIfNewer>true</overWriteIfNewer>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>src/assembly/assembly.xml</descriptor>
							</descriptors>
						</configuration>
						<executions>
							<execution>
								<id>all</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>run-on-Pi</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>transfer</id>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<!-- Ensure target directory exists on RaspPi -->
										<sshexec host="${pi.ipnumber}" port="${pi.port}"
															username="${pi.username}" password="${pi.password}"
															trust="true" command="mkdir --parents ${pi.deploydirectory}; rm -r -f ${pi.deploydirectory}/*"/>

										<!-- Transfer distribution folder to RaspPi via SCP -->
										<scp trust="true"
													localFile = "${project.build.directory}/${jar.name}.zip"
													todir="${pi.username}:${pi.password}@${pi.ipnumber}:${pi.deploydirectory}"
													port="${pi.port}">
										</scp>

										<sshexec host="${pi.ipnumber}" port="${pi.port}"
															username="${pi.username}" password="${pi.password}" trust="true"
															failonerror="false" usepty="true" useSystemIn="true"
															command="unzip '${pi.deploydirectory}/${jar.name}.zip' -d '${pi.deploydirectory}'"/>

										<sshexec host="${pi.ipnumber}" port="${pi.port}"
															username="${pi.username}" password="${pi.password}" trust="true"
															failonerror="false" usepty="true" useSystemIn="true"
															command="chmod u+x ${pi.deploydirectory}/${jar.name}/${pi.startScript}"/>

										<!-- Run application on Raspberry Pi -->
										<sshexec host="${pi.ipnumber}" port="${pi.port}"
															username="${pi.username}" password="${pi.password}" trust="true"
															failonerror="false" usepty="true" useSystemIn="true"
															command="${pi.deploydirectory}/${jar.name}/${pi.startScript} ${pi.deploydirectory}/${jar.name} ${jar.name}"/>
								</target>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant-jsch</artifactId>
								<version>1.10.15</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>restart-on-Pi</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>restart</id>
								<phase>validate</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<sshexec host="${pi.ipnumber}" port="${pi.port}"
												 username="${pi.username}" password="${pi.password}" trust="true"
												 command="${pi.deploydirectory}/${pi.restartScript}"/>
									</target>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant-jsch</artifactId>
								<version>1.10.15</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
