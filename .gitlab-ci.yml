stages:
  - update-contributors
  - validate
  - test
  - package
  - deploy
  - site
  - pages

image: maven:3.9-eclipse-temurin-21

variables:
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

cache:
  key:
    files:
      - pom.xml
  paths:
    - .m2/repository
  policy: pull-push

update-contributors:
  stage: update-contributors
  script:
    - echo "Generating detailed contributors list for README..."
    - git fetch --all # Make sure we have the latest data
    - >-
      echo "# Project Contributors" > temp_readme.md
      echo "The list below includes commit counts, additions, and deletions per contributor." >> temp_readme.md
    - >-
      # Fetch contributions since the beginning of the repository (no --since flag)
      git log --numstat --pretty="%an" | awk 'BEGIN { FS="\t" } 
        { if (NF == 3) { add[$1]+=$1; del[$1]+=$2; commits[$1]++ } } 
        END { 
          for (user in commits) {
            print user ": " commits[user] " commits, " add[user] " lines added, " del[user] " lines deleted"
          }
        }' >> temp_readme.md
    - sed -i '/# Project Contributors/,$d' README.md # Remove old contributor data from README.md
    - cat temp_readme.md >> README.md # Append new contributor data to README.md
    - git add README.md
    - git commit -m "Update contributors stats in README [skip ci]" # Commit with skip ci to prevent a recursive pipeline
    - git push
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main" && $CI_COMMIT_MESSAGE !~ /skip ci/'
    - changes:
        - '**/*'
    - when: always


# Other jobs:
validate:
  stage: validate
  script:
    - mvn $MAVEN_CLI_OPTS validate
  rules:
    - changes:
        - '**/*'
    - when: always

test:
  stage: test
  script:
    - mvn $MAVEN_CLI_OPTS test
  artifacts:
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
  rules:
    - changes:
        - '**/*'  # Tracks any changes except README.md
    - when: always

package:
  stage: package
  script:
    - mvn $MAVEN_CLI_OPTS package -DskipTests
    - ls -lh target/
  artifacts:
    paths:
      - target/*.jar
    expire_in: 1 week
  rules:
    - changes:
        - '**/*'
    - when: always

site:
  stage: site
  script:
    - mvn $MAVEN_CLI_OPTS site
  artifacts:
    paths:
      - target/site
    expire_in: 1 week
  rules:
    - changes:
        - '**/*'
    - when: always

pages:
  stage: pages
  dependencies:
    - site
  script:
    - mkdir -p public
    - cp -r target/site/* public/
  artifacts:
    paths:
      - public
    expire_in: 1 week
  rules:
    - changes:
        - '**/*'
    - when: always

deploy:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  dependencies:
    - package
  script:
    - echo "Looking for JAR file..."
    - JAR_PATH=$(find target -name 'fridgely-*.jar' | head -n1)
    - if [ -z "$JAR_PATH" ]; then echo "❌ JAR file not found!"; exit 1; fi
    - cp "$JAR_PATH" fridgely-latest.jar
    - echo "✅ JAR copied to fridgely-latest.jar"
    - |
      release-cli create \
        --name "Release v$CI_PIPELINE_IID" \
        --tag-name "v$CI_PIPELINE_IID" \
        --description "Release from Pipeline $CI_PIPELINE_IID - All tests and checks passed" \
        --assets-link '[{"name": "Fridgely JAR", "url": "'$CI_PROJECT_URL'/-/jobs/'$CI_JOB_ID'/artifacts/raw/fridgely-latest.jar"}]'
  artifacts:
    paths:
      - fridgely-latest.jar
    expire_in: 1 week
  rules:
    - changes:
        - '**/*'
    - when: always
